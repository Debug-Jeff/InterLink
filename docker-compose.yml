version: '3.8'

services:
  backend:
    build: ./backend
    container_name: interlink-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - interlink-network

  frontend:
    build: ./frontend
    container_name: interlink-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:3001
    env_file:
      - ./frontend/.env.local
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - interlink-network

  redis:
    image: redis:7-alpine
    container_name: interlink-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - interlink-network

  nginx:
    image: nginx:alpine
    container_name: interlink-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - interlink-network

volumes:
  redis_data:

networks:
  interlink-network:
    driver: bridge